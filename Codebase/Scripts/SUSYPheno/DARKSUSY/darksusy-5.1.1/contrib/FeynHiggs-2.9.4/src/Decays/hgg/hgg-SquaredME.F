*#define CHECK

#if 0
* hgg-SquaredME.F
* assembly of squared matrix element
* generated by FormCalc 7.5 on 27-Sep-2012 9:10
* this file is part of FeynHiggs
#endif

#include "hgg-vars.h"

************************************************************************

	RealType function hgg_sumup(CCloop, CCtree)
	implicit none

#include "hgg-vars.h"

	ComplexType CCloop(1), CCtree(1)
	ComplexType m

	hgg_sumup = 0

	m = 0
	m = m + CCloop(1)*MatSUN(1,1)
	hgg_sumup = hgg_sumup + Re(Conjugate(CCtree(1))*m)
	end

************************************************************************

	subroutine hgg_SquaredMEHel(result)
	implicit none
	RealType result(*)

#include "hgg-vars.h"

	RealType hgg_sumup
	external hgg_sumup

* hgg-BEGIN ABBR_HEL
	call hgg_abbr1hel
* hgg-END ABBR_HEL

* hgg-BEGIN FF_INI
	Cloop(1) = 0
* hgg-END FF_INI

* hgg-BEGIN FF_LOOP

	LOOP(Gen4, 1,3,1)
	call hgg_v1_Gen4
	ENDLOOP(Gen4)

	LOOP(Ind2, 1,3,1)
	LOOP(Ind1, 1,3,1)
	LOOP(All4, 1,6,1)
	call hgg_v1_All4_Ind1_Ind2
	ENDLOOP(All4)
	ENDLOOP(Ind1)
	ENDLOOP(Ind2)

	result(2) = result(2) + hgg_sumup(Cloop, Cloop)
* hgg-END FF_LOOP
	end

************************************************************************

	subroutine hgg_SquaredME(result, helicities)
	implicit none
	RealType result(*)
	integer helicities

#include "hgg-vars.h"

* hgg-BEGIN VARDECL
	external hgg_SquaredMEHel

	integer Hel1, Hel2, Hel3
	equivalence (Hel(1), Hel1)
	equivalence (Hel(2), Hel2)
	equivalence (Hel(3), Hel3)

	data MatSUN /1*bogus/
* hgg-END VARDECL

#include "inline.h"

* hgg-BEGIN INVARIANTS
* hgg-END INVARIANTS

* hgg-BEGIN ABBR_S
	call hgg_abbr1s
* hgg-END ABBR_S

* hgg-BEGIN ABBR_ANGLE
* hgg-END ABBR_ANGLE

* hgg-BEGIN RES_INI
	result(1) = 0
	result(2) = 0
* hgg-END RES_INI

* hgg-BEGIN HEL_LOOPS

	LOOP_HEL(Hel2)
	TEST(helicities, BIT_HEL(2))

	Hel3 = Hel2

	call hgg_SquaredMEHel(result)

	ENDTEST(helicities, BIT_HEL(2))
	ENDLOOP_HEL(Hel2)

* hgg-END HEL_LOOPS

#ifdef CHECK
	print *, 'tree =', result(1)
	print *, 'loop =', result(2)
	stop
#endif

* hgg-END SQUAREDME
	end

