********************************************************
*** subroutine dsansffvff                            ***
*** fermion + fermion -> fermion + fermion in        ***
*** s-channel gauge boson exchange (index k)         ***
*** 1 - arrow in, 2 - arrow out, k intermediate      ***
*** this code is computer generated by reduce        ***
*** and gentran.                                     ***
*** author: joakim edsjo, edsjo@physto.se            ***
********************************************************

      subroutine dsansffvff(p,costheta,kp1,kp2,kpk,kp3,kp4)
      implicit none

      include 'dsmssm.h'
      include 'dsandiacom.h'
      integer kp1,kp2,kpk,kp3,kp4
      real*8 p,costheta
      complex*16 dv,gpp2,gmm2,gpm2,gmp2

      call dsankinvar(p,costheta,kp1,kp2,kpk,kp3,kp4)
      if (s.lt.(mp3+mp4)**2) return
      dv=1.0d0/dcmplx(mk**2-s,-width(kpk)*mk)
      gpp2=(gl(kpk,kp2,kp1)+gr(kpk,kp2,kp1))*
     &     (gl(kpk,kp3,kp4)+gr(kpk,kp3,kp4))
      gmm2=(gl(kpk,kp2,kp1)-gr(kpk,kp2,kp1))*
     &     (gl(kpk,kp3,kp4)-gr(kpk,kp3,kp4))
      gpm2=(gl(kpk,kp2,kp1)+gr(kpk,kp2,kp1))*
     &     (gl(kpk,kp3,kp4)-gr(kpk,kp3,kp4))
      gmp2=(gl(kpk,kp2,kp1)-gr(kpk,kp2,kp1))*
     &     (gl(kpk,kp3,kp4)+gr(kpk,kp3,kp4))

      if (kpk.eq.kgamma) then

      aa(0,0,0,0)=aa(0,0,0,0)+2.0d0*(wd(1,0,0)*kmi*pmi-(efmi*emi))*dv*
     . gmm2
      aa(0,0,1,-1)=aa(0,0,1,-1)+2.0d0*(efpl*gmp2+gmm2*kpl)*wd(1,0,-1)*
     . dv*pmi
      aa(0,0,1,0)=aa(0,0,1,0)+2.0d0*(wd(1,0,0)*efmi*pmi-(emi*kmi))*dv*
     . gmp2
      aa(0,0,1,1)=aa(0,0,1,1)+2.0d0*(efpl*gmp2-(gmm2*kpl))*wd(1,0,1)*
     . dv*pmi
      aa(1,-1,0,0)=aa(1,-1,0,0)+2.0d0*(epl*gpm2+gmm2*ppl)*wd(1,-1,0)*
     . dv*kmi
      aa(1,-1,1,-1)=aa(1,-1,1,-1)+2.0d0*((epl*gpp2+gmp2*ppl)*efpl+epl*
     . gpm2*kpl+gmm2*kpl*ppl)*wd(1,-1,-1)*dv
      aa(1,-1,1,0)=aa(1,-1,1,0)+2.0d0*(epl*gpp2+gmp2*ppl)*wd(1,-1,0)*
     . dv*efmi
      aa(1,-1,1,1)=aa(1,-1,1,1)+2.0d0*((epl*gpp2+gmp2*ppl)*efpl-(epl*
     . gpm2*kpl)-(gmm2*kpl*ppl))*wd(1,-1,1)*dv
      aa(1,0,0,0)=aa(1,0,0,0)+2.0d0*(wd(1,0,0)*emi*kmi-(efmi*pmi))*dv*
     . gpm2
      aa(1,0,1,-1)=aa(1,0,1,-1)+2.0d0*(efpl*gpp2+gpm2*kpl)*wd(1,0,-1)*
     . dv*emi
      aa(1,0,1,0)=aa(1,0,1,0)+2.0d0*(wd(1,0,0)*efmi*emi-(kmi*pmi))*dv*
     . gpp2
      aa(1,0,1,1)=aa(1,0,1,1)+2.0d0*(efpl*gpp2-(gpm2*kpl))*wd(1,0,1)*
     . dv*emi
      aa(1,1,0,0)=aa(1,1,0,0)+2.0d0*(epl*gpm2-(gmm2*ppl))*wd(1,1,0)*dv
     . *kmi
      aa(1,1,1,-1)=aa(1,1,1,-1)+2.0d0*((epl*gpp2-(gmp2*ppl))*efpl+epl*
     . gpm2*kpl-(gmm2*kpl*ppl))*wd(1,1,-1)*dv
      aa(1,1,1,0)=aa(1,1,1,0)+2.0d0*(epl*gpp2-(gmp2*ppl))*wd(1,1,0)*dv
     . *efmi
      aa(1,1,1,1)=aa(1,1,1,1)+2.0d0*((epl*gpp2-(gmp2*ppl))*efpl-(epl*
     . gpm2*kpl)+gmm2*kpl*ppl)*wd(1,1,1)*dv

      else

      aa(0,0,0,0)=aa(0,0,0,0)+(2.0d0*((e1+e2+mk)*(e1+e2-mk)*efmi*emi+
     . wd(1,0,0)*kmi*mk**2*pmi)*dv*gmm2)/mk**2
      aa(0,0,1,-1)=aa(0,0,1,-1)+2.0d0*(efpl*gmp2+gmm2*kpl)*wd(1,0,-1)*
     . dv*pmi
      aa(0,0,1,0)=aa(0,0,1,0)+(2.0d0*((e1+e2+mk)*(e1+e2-mk)*emi*kmi+wd
     . (1,0,0)*efmi*mk**2*pmi)*dv*gmp2)/mk**2
      aa(0,0,1,1)=aa(0,0,1,1)+2.0d0*(efpl*gmp2-(gmm2*kpl))*wd(1,0,1)*
     . dv*pmi
      aa(1,-1,0,0)=aa(1,-1,0,0)+2.0d0*(epl*gpm2+gmm2*ppl)*wd(1,-1,0)*
     . dv*kmi
      aa(1,-1,1,-1)=aa(1,-1,1,-1)+2.0d0*((epl*gpp2+gmp2*ppl)*efpl+epl*
     . gpm2*kpl+gmm2*kpl*ppl)*wd(1,-1,-1)*dv
      aa(1,-1,1,0)=aa(1,-1,1,0)+2.0d0*(epl*gpp2+gmp2*ppl)*wd(1,-1,0)*
     . dv*efmi
      aa(1,-1,1,1)=aa(1,-1,1,1)+2.0d0*((epl*gpp2+gmp2*ppl)*efpl-(epl*
     . gpm2*kpl)-(gmm2*kpl*ppl))*wd(1,-1,1)*dv
      aa(1,0,0,0)=aa(1,0,0,0)+(2.0d0*((e1+e2+mk)*(e1+e2-mk)*efmi*pmi+
     . wd(1,0,0)*emi*kmi*mk**2)*dv*gpm2)/mk**2
      aa(1,0,1,-1)=aa(1,0,1,-1)+2.0d0*(efpl*gpp2+gpm2*kpl)*wd(1,0,-1)*
     . dv*emi
      aa(1,0,1,0)=aa(1,0,1,0)+(2.0d0*((e1+e2+mk)*(e1+e2-mk)*kmi*pmi+wd
     . (1,0,0)*efmi*emi*mk**2)*dv*gpp2)/mk**2
      aa(1,0,1,1)=aa(1,0,1,1)+2.0d0*(efpl*gpp2-(gpm2*kpl))*wd(1,0,1)*
     . dv*emi
      aa(1,1,0,0)=aa(1,1,0,0)+2.0d0*(epl*gpm2-(gmm2*ppl))*wd(1,1,0)*dv
     . *kmi
      aa(1,1,1,-1)=aa(1,1,1,-1)+2.0d0*((epl*gpp2-(gmp2*ppl))*efpl+epl*
     . gpm2*kpl-(gmm2*kpl*ppl))*wd(1,1,-1)*dv
      aa(1,1,1,0)=aa(1,1,1,0)+2.0d0*(epl*gpp2-(gmp2*ppl))*wd(1,1,0)*dv
     . *efmi
      aa(1,1,1,1)=aa(1,1,1,1)+2.0d0*((epl*gpp2-(gmp2*ppl))*efpl-(epl*
     . gpm2*kpl)+gmm2*kpl*ppl)*wd(1,1,1)*dv

      endif

      return

      end
