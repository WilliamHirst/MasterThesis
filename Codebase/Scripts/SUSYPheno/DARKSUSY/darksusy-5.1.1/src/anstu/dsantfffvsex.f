****************************************************
*** subroutine dsantfffvsex                      ***
*** fermion + fermion -> gauge boson + scalar in ***
*** t-channel fermion exchange (index k)         ***
*** 1 - arrow in, 2 - arrow out, k intermediate  ***
*** label 3 & 4 exchanged compared to tfffsv     ***
*** this code is computer generated by reduce    ***
*** and gentran.                                 ***
*** author: joakim edsjo, edsjo@physto.se        ***
****************************************************

      subroutine dsantfffvsex(p,costheta,kp1,kp2,kpk,kp3,kp4)
      implicit none

      include 'dsmssm.h'
      include 'dsandiacom.h'
      integer kp1,kp2,kpk,kp3,kp4
      real*8 p,costheta
      complex*16 dt,gp2,gm2,gx2,gy2

      call dsankinvar(p,costheta,kp1,kp2,kpk,kp3,kp4)
      if (s.lt.(mp3+mp4)**2) return
      dt=1.0d0/dcmplx(mk**2-u,-width(kpk)*mk)
      gp2=gl(kp3,kp2,kpk)*gl(kp4,kpk,kp1)+
     &    gr(kp3,kp2,kpk)*gr(kp4,kpk,kp1)
      gm2=gl(kp3,kp2,kpk)*gl(kp4,kpk,kp1)-
     &    gr(kp3,kp2,kpk)*gr(kp4,kpk,kp1)
      gx2=gl(kp3,kp2,kpk)*gr(kp4,kpk,kp1)+
     &    gr(kp3,kp2,kpk)*gl(kp4,kpk,kp1)
      gy2=gl(kp3,kp2,kpk)*gr(kp4,kpk,kp1)-
     &    gr(kp3,kp2,kpk)*gl(kp4,kpk,kp1)

      if (kp3.eq.kgamma) then
      aa(0,0,-1,0)=aa(0,0,-1,0)+dsqrt(2.0d0)*(e1*gy2*ppl-(e4*gy2*ppl)-
     . (epl*gy2*pp)+gm2*mk*pmi+gx2*kk*ppl)*wd(1,0,-1)*dt
      aa(0,0,1,0)=aa(0,0,1,0)+dsqrt(2.0d0)*(e1*gy2*ppl-(e4*gy2*ppl)-(
     . epl*gy2*pp)+gm2*mk*pmi-(gx2*kk*ppl))*wd(1,0,1)*dt
      aa(1,-1,-1,0)=aa(1,-1,-1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2+gy2*
     . pmi)+(emi*gy2+gx2*pmi)*(kk+pp)+epl*gp2*mk+gm2*mk*ppl)*wd(1,-1,
     . -1)*dt
      aa(1,-1,1,0)=aa(1,-1,1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2+gy2*pmi
     . )-((emi*gy2+gx2*pmi)*(kk-pp))+epl*gp2*mk+gm2*mk*ppl)*wd(1,-1,1)
     . *dt
      aa(1,0,-1,0)=aa(1,0,-1,0)+dsqrt(2.0d0)*(e1*epl*gx2-(e4*epl*gx2)+
     . emi*gp2*mk+epl*gy2*kk-(gx2*pp*ppl))*wd(1,0,-1)*dt
      aa(1,0,1,0)=aa(1,0,1,0)+dsqrt(2.0d0)*(e1*epl*gx2-(e4*epl*gx2)+
     . emi*gp2*mk-(epl*gy2*kk)-(gx2*pp*ppl))*wd(1,0,1)*dt
      aa(1,1,-1,0)=aa(1,1,-1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2-(gy2*
     . pmi))+(emi*gy2-(gx2*pmi))*(kk-pp)+epl*gp2*mk-(gm2*mk*ppl))*wd(1
     . ,1,-1)*dt
      aa(1,1,1,0)=aa(1,1,1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2-(gy2*pmi)
     . )-((emi*gy2-(gx2*pmi))*(kk+pp))+epl*gp2*mk-(gm2*mk*ppl))*wd(1,1
     . ,1)*dt

      else

      aa(0,0,-1,0)=aa(0,0,-1,0)+dsqrt(2.0d0)*(e1*gy2*ppl-(e4*gy2*ppl)-
     . (epl*gy2*pp)+gm2*mk*pmi+gx2*kk*ppl)*wd(1,0,-1)*dt
      aa(0,0,0,0)=aa(0,0,0,0)-(dsqrt(2.0d0)*(((e4*gy2*ppl+epl*gy2*pp-
     . (gm2*mk*pmi))*e3-(e1*e3*gy2*ppl)+gy2*kk**2*ppl)*wd(1,0,0)-((e1*
     . epl*gy2-(e3*epl*gy2)-(e4*epl*gy2)+emi*gm2*mk-(gy2*pp*ppl))*kk))
     . *dt)/mp3
      aa(0,0,1,0)=aa(0,0,1,0)+dsqrt(2.0d0)*(e1*gy2*ppl-(e4*gy2*ppl)-(
     . epl*gy2*pp)+gm2*mk*pmi-(gx2*kk*ppl))*wd(1,0,1)*dt
      aa(1,-1,-1,0)=aa(1,-1,-1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2+gy2*
     . pmi)+(emi*gy2+gx2*pmi)*(kk+pp)+epl*gp2*mk+gm2*mk*ppl)*wd(1,-1,
     . -1)*dt
      aa(1,-1,0,0)=aa(1,-1,0,0)-(dsqrt(2.0d0)*(((emi*gx2+gy2*pmi)*e4-
     . (emi*gy2*pp)-(epl*gp2*mk)-(gm2*mk*ppl)-(gx2*pmi*pp))*e3-((emi*
     . gx2+gy2*pmi)*e1*e3)+emi*gx2*kk**2+gy2*kk**2*pmi)*wd(1,-1,0)*dt)
     . /mp3
      aa(1,-1,1,0)=aa(1,-1,1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2+gy2*pmi
     . )-((emi*gy2+gx2*pmi)*(kk-pp))+epl*gp2*mk+gm2*mk*ppl)*wd(1,-1,1)
     . *dt
      aa(1,0,-1,0)=aa(1,0,-1,0)+dsqrt(2.0d0)*(e1*epl*gx2-(e4*epl*gx2)+
     . emi*gp2*mk+epl*gy2*kk-(gx2*pp*ppl))*wd(1,0,-1)*dt
      aa(1,0,0,0)=aa(1,0,0,0)-(dsqrt(2.0d0)*(((e4*epl*gx2-(emi*gp2*mk
     . )+gx2*pp*ppl)*e3-(e1*e3*epl*gx2)+epl*gx2*kk**2)*wd(1,0,0)-(e1*
     . gx2*kk*ppl)+e3*gx2*kk*ppl+e4*gx2*kk*ppl+epl*gx2*kk*pp-(gp2*kk*
     . mk*pmi))*dt)/mp3
      aa(1,0,1,0)=aa(1,0,1,0)+dsqrt(2.0d0)*(e1*epl*gx2-(e4*epl*gx2)+
     . emi*gp2*mk-(epl*gy2*kk)-(gx2*pp*ppl))*wd(1,0,1)*dt
      aa(1,1,-1,0)=aa(1,1,-1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2-(gy2*
     . pmi))+(emi*gy2-(gx2*pmi))*(kk-pp)+epl*gp2*mk-(gm2*mk*ppl))*wd(1
     . ,1,-1)*dt
      aa(1,1,0,0)=aa(1,1,0,0)-(dsqrt(2.0d0)*(((emi*gx2-(gy2*pmi))*e4+
     . emi*gy2*pp-(epl*gp2*mk)+gm2*mk*ppl-(gx2*pmi*pp))*e3-((emi*gx2-(
     . gy2*pmi))*e1*e3)+emi*gx2*kk**2-(gy2*kk**2*pmi))*wd(1,1,0)*dt)/
     . mp3
      aa(1,1,1,0)=aa(1,1,1,0)+dsqrt(2.0d0)*((e1-e4)*(emi*gx2-(gy2*pmi)
     . )-((emi*gy2-(gx2*pmi))*(kk+pp))+epl*gp2*mk-(gm2*mk*ppl))*wd(1,1
     . ,1)*dt

      endif

      return

      end








