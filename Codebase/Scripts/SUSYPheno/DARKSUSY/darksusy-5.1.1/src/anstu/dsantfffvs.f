****************************************************
*** subroutine dsantfffvs                        ***
*** fermion + fermion -> scalar + gauge boson in ***
*** t-channel fermion exchange (index k)         ***
*** 1 - arrow in, 2 - arrow out, k intermediate  ***
*** this code is computer generated by reduce    ***
*** and gentran.                                 ***
*** author: joakim edsjo, edsjo@physto.se        ***
****************************************************

      subroutine dsantfffvs(p,costheta,kp1,kp2,kpk,kp3,kp4)
      implicit none

      include 'dsmssm.h'
      include 'dsandiacom.h'
      integer kp1,kp2,kpk,kp3,kp4
      real*8 p,costheta
      complex*16 dt,gp2,gm2,gx2,gy2

      call dsankinvar(p,costheta,kp1,kp2,kpk,kp3,kp4)
      if (s.lt.(mp3+mp4)**2) return
      if (kp1.eq.kpk.and.kp3.eq.kgamma) then
        dt=1.0d0/dcmplx(2*e1*e3-2*p*kk*costheta,-width(kpk)*mk)
      else
        dt=1.0d0/dcmplx(mk**2-t,-width(kpk)*mk)
      endif
c      if (p.gt.345.5d0.and.p.lt.345.6d0) then
c        write(*,*) 'atfffvs: p = ',p
c        write(*,*) '       cth = ',costheta
c        write(*,*) '        mk = ',mk
c        write(*,*) '     width = ',width(kpk)
c        write(*,*) '         t = ',t
c        write(*,*) '        dt = ',dt
c      endif
      gp2=gl(kp3,kpk,kp1)*gl(kp4,kp2,kpk)+
     &   gr(kp3,kpk,kp1)*gr(kp4,kp2,kpk)
      gm2=gl(kp3,kpk,kp1)*gl(kp4,kp2,kpk)-
     &   gr(kp3,kpk,kp1)*gr(kp4,kp2,kpk)
      gx2=gl(kp3,kpk,kp1)*gr(kp4,kp2,kpk)+
     &   gr(kp3,kpk,kp1)*gl(kp4,kp2,kpk)
      gy2=gl(kp3,kpk,kp1)*gr(kp4,kp2,kpk)-
     &   gr(kp3,kpk,kp1)*gl(kp4,kp2,kpk)

      if (kp3.eq.kgamma) then

      aa(0,0,-1,0)=aa(0,0,-1,0)+dsqrt(2.0d0)*(e1*gm2*ppl-(e3*gm2*ppl)+
     . epl*gm2*pp+gp2*kk*ppl+gy2*mk*pmi)*wd(1,0,-1)*dt
      aa(0,0,1,0)=aa(0,0,1,0)+dsqrt(2.0d0)*(e1*gm2*ppl-(e3*gm2*ppl)+
     . epl*gm2*pp-(gp2*kk*ppl)+gy2*mk*pmi)*wd(1,0,1)*dt
      aa(1,-1,-1,0)=aa(1,-1,-1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2-(gm2
     . *pmi))+(emi*gm2-(gp2*pmi))*(kk-pp)-(epl*gx2*mk)-(gy2*mk*ppl))*
     . wd(1,-1,-1)*dt)
      aa(1,-1,1,0)=aa(1,-1,1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2-(gm2*
     . pmi))-((emi*gm2-(gp2*pmi))*(kk+pp))-(epl*gx2*mk)-(gy2*mk*ppl))*
     . wd(1,-1,1)*dt)
      aa(1,0,-1,0)=aa(1,0,-1,0)-(dsqrt(2.0d0)*(e1*epl*gp2-(e3*epl*gp2)
     . -(emi*gx2*mk)+epl*gm2*kk+gp2*pp*ppl)*wd(1,0,-1)*dt)
      aa(1,0,1,0)=aa(1,0,1,0)-(dsqrt(2.0d0)*(e1*epl*gp2-(e3*epl*gp2)-(
     . emi*gx2*mk)-(epl*gm2*kk)+gp2*pp*ppl)*wd(1,0,1)*dt)
      aa(1,1,-1,0)=aa(1,1,-1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2+gm2*
     . pmi)+(emi*gm2+gp2*pmi)*(kk+pp)-(epl*gx2*mk)+gy2*mk*ppl)*wd(1,1,
     . -1)*dt)
      aa(1,1,1,0)=aa(1,1,1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2+gm2*pmi)
     . -((emi*gm2+gp2*pmi)*(kk-pp))-(epl*gx2*mk)+gy2*mk*ppl)*wd(1,1,1)
     . *dt)

      else

      aa(0,0,-1,0)=aa(0,0,-1,0)+dsqrt(2.0d0)*(e1*gm2*ppl-(e3*gm2*ppl)+
     . epl*gm2*pp+gp2*kk*ppl+gy2*mk*pmi)*wd(1,0,-1)*dt
      aa(0,0,0,0)=aa(0,0,0,0)+(dsqrt(2.0d0)*(((epl*gm2*pp+gy2*mk*pmi)*
     . e3+e1*e3*gm2*ppl-(e3**2*gm2*ppl)+gm2*kk**2*ppl)*wd(1,0,0)-((e1*
     . epl*gm2-(emi*gy2*mk)+gm2*pp*ppl)*kk))*dt)/mp3
      aa(0,0,1,0)=aa(0,0,1,0)+dsqrt(2.0d0)*(e1*gm2*ppl-(e3*gm2*ppl)+
     . epl*gm2*pp-(gp2*kk*ppl)+gy2*mk*pmi)*wd(1,0,1)*dt
      aa(1,-1,-1,0)=aa(1,-1,-1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2-(gm2
     . *pmi))+(emi*gm2-(gp2*pmi))*(kk-pp)-(epl*gx2*mk)-(gy2*mk*ppl))*
     . wd(1,-1,-1)*dt)
      aa(1,-1,0,0)=aa(1,-1,0,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2-(gm2*
     . pmi))*e3-((emi*gm2*pp+epl*gx2*mk-(gp2*pmi*pp)+gy2*mk*ppl)*e3)+
     . emi*gp2*kk**2-(gm2*kk**2*pmi))*wd(1,-1,0)*dt)/mp3
      aa(1,-1,1,0)=aa(1,-1,1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2-(gm2*
     . pmi))-((emi*gm2-(gp2*pmi))*(kk+pp))-(epl*gx2*mk)-(gy2*mk*ppl))*
     . wd(1,-1,1)*dt)
      aa(1,0,-1,0)=aa(1,0,-1,0)-(dsqrt(2.0d0)*(e1*epl*gp2-(e3*epl*gp2)
     . -(emi*gx2*mk)+epl*gm2*kk+gp2*pp*ppl)*wd(1,0,-1)*dt)
      aa(1,0,0,0)=aa(1,0,0,0)+(dsqrt(2.0d0)*(((emi*gx2*mk-(gp2*pp*ppl)
     . )*e3-(e1*e3*epl*gp2)+e3**2*epl*gp2-(epl*gp2*kk**2))*wd(1,0,0)+
     . e1*gp2*kk*ppl+epl*gp2*kk*pp+gx2*kk*mk*pmi)*dt)/mp3
      aa(1,0,1,0)=aa(1,0,1,0)-(dsqrt(2.0d0)*(e1*epl*gp2-(e3*epl*gp2)-(
     . emi*gx2*mk)-(epl*gm2*kk)+gp2*pp*ppl)*wd(1,0,1)*dt)
      aa(1,1,-1,0)=aa(1,1,-1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2+gm2*
     . pmi)+(emi*gm2+gp2*pmi)*(kk+pp)-(epl*gx2*mk)+gy2*mk*ppl)*wd(1,1,
     . -1)*dt)
      aa(1,1,0,0)=aa(1,1,0,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2+gm2*pmi
     . )*e3+(emi*gm2*pp-(epl*gx2*mk)+gp2*pmi*pp+gy2*mk*ppl)*e3+emi*gp2
     . *kk**2+gm2*kk**2*pmi)*wd(1,1,0)*dt)/mp3
      aa(1,1,1,0)=aa(1,1,1,0)-(dsqrt(2.0d0)*((e1-e3)*(emi*gp2+gm2*pmi)
     . -((emi*gm2+gp2*pmi)*(kk-pp))-(epl*gx2*mk)+gy2*mk*ppl)*wd(1,1,1)
     . *dt)

      endif

      return

      end



