*#define CHECK

* SquaredME.F
* this file is part of the process {MNE1, MNE1} -> {0, MZ}
* generated by WriteSquaredME 7 Oct 2009 9:58

	subroutine gzSquaredME(result, helicities, reset)
	implicit none
	double precision result(*)
	integer helicities
	logical reset

#include "vars.h"

	double precision gzsumup
	external gzsumup

	integer Cptr, Dptr, Eptr
	integer Hel1, Hel2, Hel3, Hel4
	equivalence (Hel1, Hel(1))
	equivalence (Hel2, Hel(2))
	equivalence (Hel3, Hel(3))
	equivalence (Hel4, Hel(4))


	S = SInvariant(1,2)
	T = TInvariant(1,3)
	U = TInvariant(2,3)

	if( reset ) then
	  call setcachelast(Ccache, 0)
	  call setcachelast(Dcache, 0)
*	  call setcachelast(Ecache, 0)
	  call gzabbr_s
	  reset = .FALSE.
	endif
	Cptr = getcachelast(Ccache)
	Dptr = getcachelast(Dcache)
*	Eptr = getcachelast(Ecache)

	call gzabbr_angle

	result(1) = 0
	result(2) = 0

#define Test(i) if( .not. btest(helicities, 3*(4 - i) + 1 + Hel(i)) ) goto i

	do Hel1 = -1, 1
	Test(1)
	do Hel2 = -1, 1
	Test(2)
	do Hel3 = -1, 1
	Test(3)
	do Hel4 = -1, 1
	Test(4)

	call gzabbr_hel1
	call gzabbr_hel2

	Cloop(1) = 0

	call gzvert

	do cha1 = 1, 2
	call gzbox_cha11
	call gzbox_cha12
	call gzbox_cha13
	call gzbox_cha14
	call gzbox_cha15
	call gzbox_cha16
	call gzbox_cha17
	enddo

	do his1 = 1, 2
	call gzvert_his1
	enddo

	do lpd1 = 1, 3
	call gzvert_lpd1
	call gzbox_lpd11
	call gzbox_lpd12
	enddo

	do neu1 = 1, 4
	call gzvert_neu1
	enddo

	do qud1 = 1, 3
	call gzvert_qud1
	call gzbox_qud11
	call gzbox_qud12
	enddo

	do quu1 = 1, 3
	call gzvert_quu1
	call gzbox_quu11
	call gzbox_quu12
	enddo

	do sld1 = 1, 3
	call gzvert_sld1
	enddo

	do sle1 = 1, 3
	call gzvert_sle1
	enddo

	do sqd1 = 1, 3
	call gzvert_sqd1
	enddo

	do sqe1 = 1, 3
	call gzvert_sqe1
	enddo

	do squ1 = 1, 3
	call gzvert_squ1
	enddo

	do sqv1 = 1, 3
	call gzvert_sqv1
	enddo

	do cha1 = 1, 2
	do cha2 = 1, 2
	call gzvert_cha1_cha2
	call gzbox_cha1_cha21
	call gzbox_cha1_cha22
	call gzbox_cha1_cha23
	call gzbox_cha1_cha24
	call gzbox_cha1_cha25
	enddo
	enddo

	do cha1 = 1, 2
	do neu1 = 1, 4
	call gzvert_cha1_neu11
	call gzvert_cha1_neu12
	enddo
	enddo

	do his1 = 1, 2
	do lpd1 = 1, 3
	call gzvert_his1_lpd1
	enddo
	enddo

	do his1 = 1, 2
	do qud1 = 1, 3
	call gzvert_his1_qud1
	enddo
	enddo

	do his1 = 1, 2
	do quu1 = 1, 3
	call gzvert_his1_quu1
	enddo
	enddo

	do his1 = 1, 2
	do sld1 = 1, 3
	call gzvert_his1_sld1
	enddo
	enddo

	do his1 = 1, 2
	do sle1 = 1, 3
	call gzvert_his1_sle1
	enddo
	enddo

	do his1 = 1, 2
	do sqd1 = 1, 3
	call gzvert_his1_sqd1
	enddo
	enddo

	do his1 = 1, 2
	do sqe1 = 1, 3
	call gzvert_his1_sqe1
	enddo
	enddo

	do his1 = 1, 2
	do squ1 = 1, 3
	call gzvert_his1_squ1
	enddo
	enddo

	do his1 = 1, 2
	do sqv1 = 1, 3
	call gzvert_his1_sqv1
	enddo
	enddo

	do lpd1 = 1, 3
	do neu1 = 1, 4
	call gzvert_lpd1_neu1
	enddo
	enddo

	do neu1 = 1, 4
	do qud1 = 1, 3
	call gzvert_neu1_qud1
	enddo
	enddo

	do neu1 = 1, 4
	do quu1 = 1, 3
	call gzvert_neu1_quu1
	enddo
	enddo

	do cha1 = 1, 2
	do cha2 = 1, 2
	do his1 = 1, 2
	call gzvert_cha1_cha2_his1
	enddo
	enddo
	enddo

	result(2) = result(2) + gzsumup(Cloop, Cloop)

4	enddo
3	enddo
2	enddo
1	enddo

	call setcachelast(Ccache, Cptr)
	call setcachelast(Dcache, Dptr)
*	call setcachelast(Ecache, Eptr)

#ifdef CHECK
	print *, 'S =', S
	print *, 'T =', T
	print *, 'U =', U

	print *, 'tree =', result(1)
	print *, 'loop =', result(2)
	stop
#endif
	end

	double precision function gzsumup(CCloop, CCtree)
	implicit none

#include "vars.h"

	double complex CCloop(1), CCtree(1)
	double complex m

	gzsumup = 0

	m = 0
	m = m + CCloop(1)*1
	gzsumup = gzsumup + dble(dconjg(CCtree(1))*m)
	end

